apiVersion: kubevious.io/v1alpha1
kind: ClusterRule
metadata:
  name: container-env-secret-ref
spec:
  summary: |
    Validate ContainerSpec environment variable Secret reference.
  target: |
    Shortcut("ContainerSpec")
  cache: |
    cache.secrets = 
      helpers.newNameLookupDict(
        ApiVersion('v1')
            .Kind("Secret")
            .many()
      );
  rule: |
    for(const env of config.spec?.env ?? [])
    {
      if (env.valueFrom)
      {
        if (env.valueFrom.secretKeyRef)
        {
          const secretItem = cache.secrets.resolve(env.valueFrom.secretKeyRef.name);
          if (!secretItem)
          {
            if (!env.valueFrom.secretKeyRef.optional)
            {
              error(`Could not find Secret ${env.valueFrom.secretKeyRef.name} referenced in env variable ${env.name}.`);
            }
          }
          else
          {
            const dataObj = secretItem.config.data ?? {};
            if (!dataObj[env.valueFrom.secretKeyRef.key])
            {
              if (!env.valueFrom.secretKeyRef.optional)
              {
                error(`Could not find data key ${env.valueFrom.secretKeyRef.key} in Secret ${env.valueFrom.secretKeyRef.name} referenced in env variable ${env.name}.`);
              }
            }
          }
        }
      }
    }
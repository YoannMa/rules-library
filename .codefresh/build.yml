version: "1.0"

stages:
  - "clone"
  - "prepare"
  - "test"

steps:

  init:
    title: Init
    stage: clone
    image: codefresh/cli
    shell: bash
    commands:
      - cf_export GITHUB_TOKEN=$(codefresh get context github --decrypt -o yaml | yq -y .spec.data.auth.password)
      - export PRODUCT_NAME=${{CF_REPO_NAME}}
      - cf_export PRODUCT_NAME=${PRODUCT_NAME}
      - cf_export MAIN_REPO_PATH=/codefresh/volume/repo.git
      - export DEMOS_REPO_NAME=demos
      - cf_export DEMOS_REPO_NAME=${DEMOS_REPO_NAME}
      - cf_export DEMOS_REPO_PATH=/codefresh/volume/${DEMOS_REPO_NAME}.git
      - cf_export SAMPLES_PATH=/codefresh/volume/samples
      - 'echo "Repo: ${{CF_REPO_NAME}}"'
      - 'echo "Branch: ${{CF_BRANCH}}"'
      - 'echo "Revision: ${{CF_REVISION}}"'
      - 'echo "Author: ${{CF_COMMIT_AUTHOR}}"'
      - 'echo "Message: ${{CF_COMMIT_MESSAGE}}"'
      
  clone:
    title: Clone Repo
    stage: clone
    image: 'alpine/git:latest'
    working_directory: "/codefresh/volume"
    commands:
      - pwd
      - ls -la
      - rm -rf ${{MAIN_REPO_PATH}}
      - 'git clone https://${{CF_REPO_OWNER}}:${{GITHUB_TOKEN}}@github.com/${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}.git ${{MAIN_REPO_PATH}}'
      - ls -la
      - cd ${{MAIN_REPO_PATH}}
      - git reset --hard ${{CF_REVISION}}
      - ls -la

  clone_demos:
    title: Clone Demos Repo
    stage: clone
    image: 'alpine/git:latest'
    working_directory: "/codefresh/volume"
    commands:
      - pwd
      - ls -la
      - rm -rf ${{DEMOS_REPO_PATH}}
      - 'git clone https://${{CF_REPO_OWNER}}:${{GITHUB_TOKEN}}@github.com/${{CF_REPO_OWNER}}/${{DEMOS_REPO_NAME}}.git ${{DEMOS_REPO_PATH}}'
      - ls -la
      - cd ${{DEMOS_REPO_PATH}}
      - ls -la

  prepare_chart_traefik:
    title: Prepare Traefik Charts
    stage: prepare
    image: kubevious/cicd_deployer:latest
    working_directory: ${{SAMPLES_PATH}}
    commands:
      - helm version
      - helm repo add traefik https://traefik.github.io/charts
      - ls -la
      - rm -rf traefik
      - mkdir traefik
      - helm template traefik/traefik --include-crds > traefik/traefik.yaml

  prepare_chart_prometheus:
    title: Prepare Prometheus Charts
    stage: prepare
    image: kubevious/cicd_deployer:latest
    working_directory: ${{SAMPLES_PATH}}
    commands:
      - helm version
      - helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
      - ls -la
      - rm -rf prometheus
      - mkdir prometheus
      - helm template prometheus-community/prometheus > prometheus/prometheus.yaml

  prepare_chart_grafana:
    title: Prepare Grafana Charts
    stage: prepare
    image: kubevious/cicd_deployer:latest
    working_directory: ${{SAMPLES_PATH}}
    commands:
      - helm version
      - helm repo add grafana https://grafana.github.io/helm-charts
      - ls -la
      - rm -rf grafana
      - mkdir grafana
      - helm template grafana/grafana --namespace grafana --set persistence.enabled=true > grafana/grafana.yaml

  prepare_chart_kubeflow:
    title: Prepare Kubeflow Charts
    stage: prepare
    image: kubevious/cicd_deployer:latest
    working_directory: ${{SAMPLES_PATH}}
    commands:
      - ls -la
      - rm -rf kubeflow
      - rm -rf kubeflow-pipelines.git
      - mkdir kubeflow
      - git clone https://github.com/kubeflow/pipelines.git kubeflow-pipelines.git
      - kustomize build kubeflow-pipelines.git/manifests/kustomize/cluster-scoped-resources > kubeflow/cluster-scoped-resources.yaml
      - kustomize build kubeflow-pipelines.git/manifests/kustomize/env/platform-agnostic > kubeflow/env-platform-agnostic.yaml
      - |
        cat >kubeflow/webhook-server-tls.yaml <<EOL
        apiVersion: v1
        kind: Secret
        metadata:
          name: webhook-server-tls
          namespace: kubeflow
        EOL

  prepare_istio:
    title: Prepare Kubeflow Charts
    stage: prepare
    image: kubevious/cicd_deployer:latest
    working_directory: ${{SAMPLES_PATH}}
    commands:
      - ls -la
      - rm -rf istio
      - mkdir istio
      - |
        cat >istio/secret-gateway-api-admission.yaml <<EOL
        apiVersion: v1
        kind: Secret
        metadata:
          name: gateway-api-admission
          namespace: gateway-system
        EOL

  validate_hipster:
    title: Validate Hipster
    stage: test
    image: 'kubevious/cli:latest'
    working_directory: ${{DEMOS_REPO_PATH}}
    commands:
      - kubevious --version
      - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml ${{DEMOS_REPO_PATH}}/guard/01-hipster-shop/hipster-chart/templates/
      - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml ${{DEMOS_REPO_PATH}}/guard/01-hipster-shop/hipster-chart/templates/ ${{DEMOS_REPO_PATH}}/guard/01-hipster-shop/network-policies-chart/templates/
      - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml ${{DEMOS_REPO_PATH}}/guard/01-hipster-shop/hipster-chart/templates/ ${{DEMOS_REPO_PATH}}/guard/01-hipster-shop/istio-chart/templates/ https://raw.githubusercontent.com/istio/istio/master/manifests/charts/base/crds/crd-all.gen.yaml

  validate_voter:
    title: Validate Voter
    stage: test
    image: 'kubevious/cli:latest'
    working_directory: ${{DEMOS_REPO_PATH}}
    commands:
      - kubevious --version
      - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml ${{DEMOS_REPO_PATH}}/guard/02-voter-app/voter-chart/templates/

  validate_traefik:
    title: Validate Traefik
    stage: test
    image: 'kubevious/cli:latest'
    working_directory: ${{DEMOS_REPO_PATH}}
    commands:
      - kubevious --version
      - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml ${{SAMPLES_PATH}}/traefik.yaml
      
  validate_kubeflow:
    title: Validate Kubeflow
    stage: test
    image: 'kubevious/cli:latest'
    working_directory: ${{DEMOS_REPO_PATH}}
    commands:
      - kubevious --version
      - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml ${{SAMPLES_PATH}}/kubeflow/cluster-scoped-resources.yaml ${{SAMPLES_PATH}}/kubeflow/env-platform-agnostic.yaml ${{SAMPLES_PATH}}/kubeflow/webhook-server-tls.yaml

  validate_prometheus:
    title: Validate Prometheus
    stage: test
    image: 'kubevious/cli:latest'
    working_directory: ${{DEMOS_REPO_PATH}}
    commands:
      - kubevious --version
      - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml ${{SAMPLES_PATH}}/prometheus/prometheus.yaml

  validate_grafana:
    title: Validate Grafana
    stage: test
    image: 'kubevious/cli:latest'
    working_directory: ${{DEMOS_REPO_PATH}}
    commands:
      - kubevious --version
      - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml ${{SAMPLES_PATH}}/grafana/grafana.yaml
      
  validate_istio_classic:
    title: Validate Istio Classic
    stage: test
    image: 'kubevious/cli:latest'
    working_directory: ${{DEMOS_REPO_PATH}}
    commands:
      - kubevious --version
      - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml https://raw.githubusercontent.com/istio/istio/master/manifests/charts/base/crds/crd-all.gen.yaml https://raw.githubusercontent.com/kubevious/demos/main/guard/10-istio-bookinfo/bookinfo.yaml https://raw.githubusercontent.com/kubevious/demos/main/guard/10-istio-bookinfo/istio-classic/bookinfo-gateway.yaml https://raw.githubusercontent.com/kubevious/demos/main/guard/10-istio-bookinfo/istio-classic/destination-rule-all.yaml

  validate_istio_gateway_api:
    title: Validate Istio Gateway API
    stage: test
    image: 'kubevious/cli:latest'
    working_directory: ${{DEMOS_REPO_PATH}}
    commands:
      - kubevious --version
      - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml https://github.com/kubernetes-sigs/gateway-api/releases/download/v0.5.1/standard-install.yaml ${{SAMPLES_PATH}}/istio/secret-gateway-api-admission.yaml https://raw.githubusercontent.com/kubevious/demos/main/guard/10-istio-bookinfo/bookinfo.yaml https://raw.githubusercontent.com/kubevious/demos/main/guard/10-istio-bookinfo/gateway-api/mock-gateway-class.yaml https://raw.githubusercontent.com/kubevious/demos/main/guard/10-istio-bookinfo/gateway-api/bookinfo-gateway.yaml https://raw.githubusercontent.com/kubevious/demos/main/guard/10-istio-bookinfo/gateway-api/bookinfo-versions.yaml


  validate_argo_rollout_sample:
    title: Validate Argo Rollout Sample
    stage: test
    image: 'kubevious/cli:latest'
    working_directory: ${{DEMOS_REPO_PATH}}
    commands:
      - kubevious --version
      - kubevious guard --skip-community-rules ${{MAIN_REPO_PATH}}/index.yaml ${{DEMOS_REPO_PATH}}/crds/argo-rollouts/crds.yaml ${{DEMOS_REPO_PATH}}/guard/40-argo-rollout
apiVersion: kubevious.io/v1alpha1
kind: ClusterRule
metadata:
  name: container-env-config-map-ref
spec:
  target: |
    Shortcut("ContainerSpec")
  cache: |
    cache.configMaps = 
      helpers.newNameLookupDict(
        ApiVersion('v1')
            .Kind("ConfigMap")
            .many()
      );
  rule: |
    for(const env of config.spec?.env ?? [])
    {
      if (env.valueFrom)
      {
        if (env.valueFrom.configMapKeyRef)
        {
          const configMapItem = cache.configMaps.resolve(env.valueFrom.configMapKeyRef.name);
          if (!configMapItem)
          {
            if (!env.valueFrom.configMapKeyRef.optional)
            {
              error(`Could not find ConfigMap ${env.valueFrom.configMapKeyRef.name} referenced in env variable ${env.name}.`);
            }
          }
          else
          {
            const dataObj = configMapItem.config.data ?? {};
            if (!dataObj[env.valueFrom.configMapKeyRef.key])
            {
              if (!env.valueFrom.configMapKeyRef.optional)
              {
                error(`Could not find data key ${env.valueFrom.configMapKeyRef.key} in ConfigMap ${env.valueFrom.configMapKeyRef.name} referenced in env variable ${env.name}.`);
              }
            }
          }
        }
      }
    }